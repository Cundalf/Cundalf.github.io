name: Deploy to SSH Server

on:
  push:
    branches: ["master"]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          clean: true
      
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8
          run_install: false
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"
      
      - name: Install dependencies
        run: pnpm install
      
      - name: Clean build cache
        run: pnpm run clean || echo "No clean script found"
      
      - name: Build Next.js app
        run: pnpm run build
      
      - name: Create deployment archive
        run: |
          cd out
          tar -czf ../site.tar.gz .
          cd ..
          ls -la site.tar.gz
      
      - name: Debug SSH Configuration
        run: |
          echo "SSH_HOST: ${{ secrets.SSH_HOST }}"
          echo "SSH_USER: ${{ secrets.SSH_USER }}"
          echo "SSH_PORT: ${{ secrets.SSH_PORT }}"
          echo "DEPLOY_PATH: ${{ secrets.DEPLOY_PATH }}"
          echo "SSH_PRIVATE_KEY configured: ${{ secrets.SSH_PRIVATE_KEY != '' }}"
      
      - name: Test SSH Connection
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          debug: true
          script: |
            echo "SSH connection successful!"
            whoami
            pwd
            ls -la
      
      - name: Copy files to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: "site.tar.gz"
          target: "/tmp/"
          debug: true
      
      - name: Deploy to Server
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          debug: true
          script: |
            echo "Iniciando despliegue..."
            
            # Crear directorio de backup
            mkdir -p ~/backups
            
            # Backup del sitio actual si existe
            if [ -d "${{ secrets.DEPLOY_PATH }}" ]; then
              echo "Creando backup del sitio actual..."
              tar -czf ~/backups/site-backup-$(date +%Y%m%d-%H%M%S).tar.gz -C ${{ secrets.DEPLOY_PATH }} .
              echo "Backup creado exitosamente"
            fi
            
            # Crear directorio de despliegue si no existe
            mkdir -p ${{ secrets.DEPLOY_PATH }}
            
            # Limpiar directorio de despliegue
            echo "Limpiando directorio de despliegue..."
            rm -rf ${{ secrets.DEPLOY_PATH }}/*
            
            # Verificar que el archivo se copió
            if [ -f "/tmp/site.tar.gz" ]; then
              echo "Archivo encontrado en /tmp/site.tar.gz"
              ls -la /tmp/site.tar.gz
              
              # Extraer archivos en el directorio de despliegue
              echo "Extrayendo archivos..."
              cd ${{ secrets.DEPLOY_PATH }}
              tar -xzf /tmp/site.tar.gz
              
              # Limpiar archivo temporal
              rm -f /tmp/site.tar.gz
              
              # Establecer permisos correctos
              chmod -R 755 ${{ secrets.DEPLOY_PATH }}
              
              echo "Archivos extraídos y permisos configurados"
              ls -la ${{ secrets.DEPLOY_PATH }}
              
              echo "Despliegue completado exitosamente"
            else
              echo "Error: No se encontró el archivo en /tmp/site.tar.gz"
              exit 1
            fi 